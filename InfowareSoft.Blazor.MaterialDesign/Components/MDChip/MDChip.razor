@namespace InfowareSoft.Blazor.MaterialDesign.Components
@inherits DOMComponent
@implements IChip

<div class="@ClassMapper.Class" role="row" @ref="Ref" @attributes="@Attributes">
    <div class="mdc-chip__ripple"></div>
    @if (Icon.HasValue)
    {
        <MDIcon Class="mdc-chip__icon mdc-chip__icon--leading" Icon="@Icon.Value"></MDIcon>
    }
    @if (IsFilter)
    {
        <span class="mdc-chip__checkmark">
            <svg class="mdc-chip__checkmark-svg" viewBox="-2 -3 30 30">
                <path class="mdc-chip__checkmark-path" fill="none" stroke="black"
                        d="M1.73,12.91 8.1,19.28 22.79,4.59" />
            </svg>
        </span>
    }

    <span role="gridcell">
        @if (Text != null)
        {
            <span role="Role" aria-checked="@(IsFilter ? InitialSelected.ToString() : null)" tabindex="0" class="mdc-chip__text">@Text</span>
        }
        @ChildContent
    </span>
    @if (TrailingIcon.HasValue)
    {
        <span role="gridcell">
            <MDIcon Class="mdc-chip__icon mdc-chip__icon--trailing" tabindex="-1" role="button" Icon="@TrailingIcon.Value"></MDIcon>
        </span>
    }
    @if (TouchWrapper != null)
    {
        <div class="mdc-chip__touch"></div>
    }
</div>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        ClassMapper.Add("mdc-chip")
            .If(() => TouchWrapper != null, "mdc-chip--touch")
            .If(() => InitialSelected, "mdc-chip--selected");
    }

    [CascadingParameter(Name = "MDTouchWrapper")] public MDTouchWrapper TouchWrapper { get; set; }
    [CascadingParameter(Name = "ChipSet")] public MDChipSet ContainerChipSet { get; set; }
    [Parameter] public string Text { get; set; }
    [Parameter] public MDIconEnum? Icon { get; set; }
    [Parameter] public MDIconEnum? TrailingIcon { get; set; }

    [Parameter] public bool InitialSelected { get; set; }

    private bool IsFilter => ContainerChipSet != null && ContainerChipSet.Mode == MDChipSetMode.Filter;
    private string Role => IsFilter ? "checkbox" : "button";
}
